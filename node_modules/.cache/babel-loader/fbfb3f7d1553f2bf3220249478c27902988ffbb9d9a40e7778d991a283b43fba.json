{"ast":null,"code":"import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import axios from\"axios\";const initialState={users:[],filteredUsers:[],filters:{name:\"\",username:\"\",email:\"\",phone:\"\"},status:\"idle\",error:null};// Fetch users from API\nexport const fetchUsers=createAsyncThunk(\"users/fetchUsers\",async()=>{const response=await axios.get(\"https://jsonplaceholder.typicode.com/users\");return response.data;});const usersSlice=createSlice({name:\"users\",initialState,reducers:{setFilter(state,action){state.filters[action.payload.key]=action.payload.value;state.filteredUsers=state.users.filter(user=>Object.keys(state.filters).every(key=>user[key].toString().toLowerCase().includes(state.filters[key].toLowerCase())));}},extraReducers(builder){builder.addCase(fetchUsers.pending,state=>{state.status=\"loading\";}).addCase(fetchUsers.fulfilled,(state,action)=>{state.status=\"succeeded\";state.users=action.payload;state.filteredUsers=action.payload;}).addCase(fetchUsers.rejected,(state,action)=>{state.status=\"failed\";state.error=action.error.message||\"Failed to fetch users\";});}});export const{setFilter}=usersSlice.actions;export default usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","users","filteredUsers","filters","name","username","email","phone","status","error","fetchUsers","response","get","data","usersSlice","reducers","setFilter","state","action","payload","key","value","filter","user","Object","keys","every","toString","toLowerCase","includes","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["C:/Users/Sa4ok/MATE/Smart-task/src/app/usersSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\ninterface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n  phone: string;\n}\n\ninterface UsersState {\n  users: User[];\n  filteredUsers: User[];\n  filters: {\n    name: string;\n    username: string;\n    email: string;\n    phone: string;\n  };\n  status: \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\n  error: string | null;\n}\n\nconst initialState: UsersState = {\n  users: [],\n  filteredUsers: [],\n  filters: {\n    name: \"\",\n    username: \"\",\n    email: \"\",\n    phone: \"\",\n  },\n  status: \"idle\",\n  error: null,\n};\n\n// Fetch users from API\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\n  const response = await axios.get(\n    \"https://jsonplaceholder.typicode.com/users\"\n  );\n  return response.data as User[];\n});\n\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    setFilter(\n      state,\n      action: PayloadAction<{ key: keyof UsersState[\"filters\"]; value: string }>\n    ) {\n      state.filters[action.payload.key] = action.payload.value;\n      state.filteredUsers = state.users.filter((user) =>\n        Object.keys(state.filters).every((key) =>\n          user[key as keyof User]\n            .toString()\n            .toLowerCase()\n            .includes(\n              state.filters[key as keyof UsersState[\"filters\"]].toLowerCase()\n            )\n        )\n      );\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchUsers.pending, (state) => {\n        state.status = \"loading\";\n      })\n      .addCase(fetchUsers.fulfilled, (state, action: PayloadAction<User[]>) => {\n        state.status = \"succeeded\";\n        state.users = action.payload;\n        state.filteredUsers = action.payload;\n      })\n      .addCase(fetchUsers.rejected, (state, action) => {\n        state.status = \"failed\";\n        state.error = action.error.message || \"Failed to fetch users\";\n      });\n  },\n});\n\nexport const { setFilter } = usersSlice.actions;\nexport default usersSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,CAAEC,gBAAgB,KAAuB,kBAAkB,CAC/E,MAAO,CAAAC,KAAK,KAAM,OAAO,CAuBzB,KAAM,CAAAC,YAAwB,CAAG,CAC/BC,KAAK,CAAE,EAAE,CACTC,aAAa,CAAE,EAAE,CACjBC,OAAO,CAAE,CACPC,IAAI,CAAE,EAAE,CACRC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EACT,CAAC,CACDC,MAAM,CAAE,MAAM,CACdC,KAAK,CAAE,IACT,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,UAAU,CAAGZ,gBAAgB,CAAC,kBAAkB,CAAE,SAAY,CACzE,KAAM,CAAAa,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACa,GAAG,CAC9B,4CACF,CAAC,CACD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAAC,CAEF,KAAM,CAAAC,UAAU,CAAGjB,WAAW,CAAC,CAC7BO,IAAI,CAAE,OAAO,CACbJ,YAAY,CACZe,QAAQ,CAAE,CACRC,SAASA,CACPC,KAAK,CACLC,MAA0E,CAC1E,CACAD,KAAK,CAACd,OAAO,CAACe,MAAM,CAACC,OAAO,CAACC,GAAG,CAAC,CAAGF,MAAM,CAACC,OAAO,CAACE,KAAK,CACxDJ,KAAK,CAACf,aAAa,CAAGe,KAAK,CAAChB,KAAK,CAACqB,MAAM,CAAEC,IAAI,EAC5CC,MAAM,CAACC,IAAI,CAACR,KAAK,CAACd,OAAO,CAAC,CAACuB,KAAK,CAAEN,GAAG,EACnCG,IAAI,CAACH,GAAG,CAAe,CACpBO,QAAQ,CAAC,CAAC,CACVC,WAAW,CAAC,CAAC,CACbC,QAAQ,CACPZ,KAAK,CAACd,OAAO,CAACiB,GAAG,CAAgC,CAACQ,WAAW,CAAC,CAChE,CACJ,CACF,CAAC,CACH,CACF,CAAC,CACDE,aAAaA,CAACC,OAAO,CAAE,CACrBA,OAAO,CACJC,OAAO,CAACtB,UAAU,CAACuB,OAAO,CAAGhB,KAAK,EAAK,CACtCA,KAAK,CAACT,MAAM,CAAG,SAAS,CAC1B,CAAC,CAAC,CACDwB,OAAO,CAACtB,UAAU,CAACwB,SAAS,CAAE,CAACjB,KAAK,CAAEC,MAA6B,GAAK,CACvED,KAAK,CAACT,MAAM,CAAG,WAAW,CAC1BS,KAAK,CAAChB,KAAK,CAAGiB,MAAM,CAACC,OAAO,CAC5BF,KAAK,CAACf,aAAa,CAAGgB,MAAM,CAACC,OAAO,CACtC,CAAC,CAAC,CACDa,OAAO,CAACtB,UAAU,CAACyB,QAAQ,CAAE,CAAClB,KAAK,CAAEC,MAAM,GAAK,CAC/CD,KAAK,CAACT,MAAM,CAAG,QAAQ,CACvBS,KAAK,CAACR,KAAK,CAAGS,MAAM,CAACT,KAAK,CAAC2B,OAAO,EAAI,uBAAuB,CAC/D,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEpB,SAAU,CAAC,CAAGF,UAAU,CAACuB,OAAO,CAC/C,cAAe,CAAAvB,UAAU,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}