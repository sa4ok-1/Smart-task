{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import axios from'axios';const initialState={users:[],filteredUsers:[],filters:{name:'',username:'',email:'',phone:''},status:'idle',error:null};// Fetch users from API\nexport const fetchUsers=createAsyncThunk('users/fetchUsers',async()=>{const response=await axios.get('https://jsonplaceholder.typicode.com/users');return response.data;});const usersSlice=createSlice({name:'users',initialState,reducers:{setFilter(state,action){state.filters[action.payload.key]=action.payload.value;state.filteredUsers=state.users.filter(user=>Object.keys(state.filters).every(key=>user[key].toString().toLowerCase().includes(state.filters[key].toLowerCase())));}},extraReducers(builder){builder.addCase(fetchUsers.pending,state=>{state.status='loading';}).addCase(fetchUsers.fulfilled,(state,action)=>{state.status='succeeded';state.users=action.payload;state.filteredUsers=action.payload;}).addCase(fetchUsers.rejected,(state,action)=>{state.status='failed';state.error=action.error.message||'Failed to fetch users';});}});export const{setFilter}=usersSlice.actions;export default usersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","users","filteredUsers","filters","name","username","email","phone","status","error","fetchUsers","response","get","data","usersSlice","reducers","setFilter","state","action","payload","key","value","filter","user","Object","keys","every","toString","toLowerCase","includes","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["C:/Users/Sa4ok/PROBA/user-management/src/users/usersSlice.ts"],"sourcesContent":["\r\nimport { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  username: string;\r\n  email: string;\r\n  phone: string;\r\n}\r\n\r\ninterface UsersState {\r\n  users: User[];\r\n  filteredUsers: User[];\r\n  filters: {\r\n    name: string;\r\n    username: string;\r\n    email: string;\r\n    phone: string;\r\n  };\r\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: UsersState = {\r\n  users: [],\r\n  filteredUsers: [],\r\n  filters: {\r\n    name: '',\r\n    username: '',\r\n    email: '',\r\n    phone: '',\r\n  },\r\n  status: 'idle',\r\n  error: null,\r\n};\r\n\r\n// Fetch users from API\r\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\r\n  const response = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n  return response.data as User[];\r\n});\r\n\r\nconst usersSlice = createSlice({\r\n  name: 'users',\r\n  initialState,\r\n  reducers: {\r\n    setFilter(state, action: PayloadAction<{ key: keyof UsersState['filters']; value: string }>) {\r\n      state.filters[action.payload.key] = action.payload.value;\r\n      state.filteredUsers = state.users.filter((user) =>\r\n        Object.keys(state.filters).every((key) =>\r\n          user[key as keyof User]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(state.filters[key as keyof UsersState['filters']].toLowerCase())\r\n        )\r\n      );\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(fetchUsers.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchUsers.fulfilled, (state, action: PayloadAction<User[]>) => {\r\n        state.status = 'succeeded';\r\n        state.users = action.payload;\r\n        state.filteredUsers = action.payload;\r\n      })\r\n      .addCase(fetchUsers.rejected, (state, action) => {\r\n        state.status = 'failed';\r\n        state.error = action.error.message || 'Failed to fetch users';\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setFilter } = usersSlice.actions;\r\nexport default usersSlice.reducer;\r\n"],"mappings":"AACA,OAASA,WAAW,CAAEC,gBAAgB,KAAuB,kBAAkB,CAC/E,MAAO,CAAAC,KAAK,KAAM,OAAO,CAuBzB,KAAM,CAAAC,YAAwB,CAAG,CAC/BC,KAAK,CAAE,EAAE,CACTC,aAAa,CAAE,EAAE,CACjBC,OAAO,CAAE,CACPC,IAAI,CAAE,EAAE,CACRC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EACT,CAAC,CACDC,MAAM,CAAE,MAAM,CACdC,KAAK,CAAE,IACT,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,UAAU,CAAGZ,gBAAgB,CAAC,kBAAkB,CAAE,SAAY,CACzE,KAAM,CAAAa,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACa,GAAG,CAAC,4CAA4C,CAAC,CAC9E,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAAC,CAEF,KAAM,CAAAC,UAAU,CAAGjB,WAAW,CAAC,CAC7BO,IAAI,CAAE,OAAO,CACbJ,YAAY,CACZe,QAAQ,CAAE,CACRC,SAASA,CAACC,KAAK,CAAEC,MAA0E,CAAE,CAC3FD,KAAK,CAACd,OAAO,CAACe,MAAM,CAACC,OAAO,CAACC,GAAG,CAAC,CAAGF,MAAM,CAACC,OAAO,CAACE,KAAK,CACxDJ,KAAK,CAACf,aAAa,CAAGe,KAAK,CAAChB,KAAK,CAACqB,MAAM,CAAEC,IAAI,EAC5CC,MAAM,CAACC,IAAI,CAACR,KAAK,CAACd,OAAO,CAAC,CAACuB,KAAK,CAAEN,GAAG,EACnCG,IAAI,CAACH,GAAG,CAAe,CACpBO,QAAQ,CAAC,CAAC,CACVC,WAAW,CAAC,CAAC,CACbC,QAAQ,CAACZ,KAAK,CAACd,OAAO,CAACiB,GAAG,CAAgC,CAACQ,WAAW,CAAC,CAAC,CAC7E,CACF,CAAC,CACH,CACF,CAAC,CACDE,aAAaA,CAACC,OAAO,CAAE,CACrBA,OAAO,CACJC,OAAO,CAACtB,UAAU,CAACuB,OAAO,CAAGhB,KAAK,EAAK,CACtCA,KAAK,CAACT,MAAM,CAAG,SAAS,CAC1B,CAAC,CAAC,CACDwB,OAAO,CAACtB,UAAU,CAACwB,SAAS,CAAE,CAACjB,KAAK,CAAEC,MAA6B,GAAK,CACvED,KAAK,CAACT,MAAM,CAAG,WAAW,CAC1BS,KAAK,CAAChB,KAAK,CAAGiB,MAAM,CAACC,OAAO,CAC5BF,KAAK,CAACf,aAAa,CAAGgB,MAAM,CAACC,OAAO,CACtC,CAAC,CAAC,CACDa,OAAO,CAACtB,UAAU,CAACyB,QAAQ,CAAE,CAAClB,KAAK,CAAEC,MAAM,GAAK,CAC/CD,KAAK,CAACT,MAAM,CAAG,QAAQ,CACvBS,KAAK,CAACR,KAAK,CAAGS,MAAM,CAACT,KAAK,CAAC2B,OAAO,EAAI,uBAAuB,CAC/D,CAAC,CAAC,CACN,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEpB,SAAU,CAAC,CAAGF,UAAU,CAACuB,OAAO,CAC/C,cAAe,CAAAvB,UAAU,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}