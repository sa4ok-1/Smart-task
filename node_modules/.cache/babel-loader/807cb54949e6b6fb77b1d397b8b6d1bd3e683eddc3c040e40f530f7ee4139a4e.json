{"ast":null,"code":"import React,{useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{fetchUsers}from\"../app/usersSlice\";import\"./UserTable.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const UserTable=()=>{const dispatch=useDispatch();const{filteredUsers,status,error}=useSelector(state=>state.users);useEffect(()=>{if(status===\"idle\"){dispatch(fetchUsers());}},[dispatch,status]);if(status===\"loading\"){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(status===\"failed\"){return/*#__PURE__*/_jsxs(\"div\",{children:[\"Error: \",error]});}return/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Phone\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredUsers.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.name}),/*#__PURE__*/_jsx(\"td\",{children:user.username}),/*#__PURE__*/_jsx(\"td\",{children:user.email}),/*#__PURE__*/_jsx(\"td\",{children:user.phone})]},user.id))})]});};","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchUsers","jsx","_jsx","jsxs","_jsxs","UserTable","dispatch","filteredUsers","status","error","state","users","children","map","user","name","username","email","phone","id"],"sources":["C:/Users/Sa4ok/MATE/Smart-task/src/usersTable/UserTable.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \"../app/store\";\nimport { fetchUsers } from \"../app/usersSlice\";\nimport \"./UserTable.css\";\n\nexport const UserTable: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const { filteredUsers, status, error } = useSelector(\n    (state: RootState) => state.users\n  );\n\n  useEffect(() => {\n    if (status === \"idle\") {\n      dispatch(fetchUsers());\n    }\n  }, [dispatch, status]);\n\n  if (status === \"loading\") {\n    return <div>Loading...</div>;\n  }\n\n  if (status === \"failed\") {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Username</th>\n          <th>Email</th>\n          <th>Phone</th>\n        </tr>\n      </thead>\n      <tbody>\n        {filteredUsers.map((user) => (\n          <tr key={user.id}>\n            <td>{user.name}</td>\n            <td>{user.username}</td>\n            <td>{user.email}</td>\n            <td>{user.phone}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAEtD,OAASC,UAAU,KAAQ,mBAAmB,CAC9C,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,MAAO,MAAM,CAAAC,SAAmB,CAAGA,CAAA,GAAM,CACvC,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAc,CAAC,CAC3C,KAAM,CAAEQ,aAAa,CAAEC,MAAM,CAAEC,KAAM,CAAC,CAAGX,WAAW,CACjDY,KAAgB,EAAKA,KAAK,CAACC,KAC9B,CAAC,CAEDd,SAAS,CAAC,IAAM,CACd,GAAIW,MAAM,GAAK,MAAM,CAAE,CACrBF,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC,CACxB,CACF,CAAC,CAAE,CAACM,QAAQ,CAAEE,MAAM,CAAC,CAAC,CAEtB,GAAIA,MAAM,GAAK,SAAS,CAAE,CACxB,mBAAON,IAAA,QAAAU,QAAA,CAAK,YAAU,CAAK,CAAC,CAC9B,CAEA,GAAIJ,MAAM,GAAK,QAAQ,CAAE,CACvB,mBAAOJ,KAAA,QAAAQ,QAAA,EAAK,SAAO,CAACH,KAAK,EAAM,CAAC,CAClC,CAEA,mBACEL,KAAA,UAAAQ,QAAA,eACEV,IAAA,UAAAU,QAAA,cACER,KAAA,OAAAQ,QAAA,eACEV,IAAA,OAAAU,QAAA,CAAI,MAAI,CAAI,CAAC,cACbV,IAAA,OAAAU,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBV,IAAA,OAAAU,QAAA,CAAI,OAAK,CAAI,CAAC,cACdV,IAAA,OAAAU,QAAA,CAAI,OAAK,CAAI,CAAC,EACZ,CAAC,CACA,CAAC,cACRV,IAAA,UAAAU,QAAA,CACGL,aAAa,CAACM,GAAG,CAAEC,IAAI,eACtBV,KAAA,OAAAQ,QAAA,eACEV,IAAA,OAAAU,QAAA,CAAKE,IAAI,CAACC,IAAI,CAAK,CAAC,cACpBb,IAAA,OAAAU,QAAA,CAAKE,IAAI,CAACE,QAAQ,CAAK,CAAC,cACxBd,IAAA,OAAAU,QAAA,CAAKE,IAAI,CAACG,KAAK,CAAK,CAAC,cACrBf,IAAA,OAAAU,QAAA,CAAKE,IAAI,CAACI,KAAK,CAAK,CAAC,GAJdJ,IAAI,CAACK,EAKV,CACL,CAAC,CACG,CAAC,EACH,CAAC,CAEZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}